'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var react = require('react');
var react__default = _interopDefault(react);
var reactNative = require('react-native');

/* eslint-disable no-unused-vars */
var enums = ['window', 'screen'];
var initialDimensions = {
  fontScale: null,
  height: null,
  width: null,
  scale: null
};
var index = (function (type) {
  if (enums.indexOf(type) === -1) {
    return initialDimensions;
  }

  var _useState = react.useState(reactNative.Dimensions.get(type)),
      dimensions = _useState[0],
      setDimensions = _useState[1];

  react.useEffect(function () {
    var currentDimensions = reactNative.Dimensions.get(type);
    setDimensions(currentDimensions);
  }, [type]);
  react.useEffect(function () {
    function dimensionsChange(params) {
      setDimensions(params[type]);
    }

    reactNative.Dimensions.addEventListener('change', dimensionsChange);
    return function () {
      reactNative.Dimensions.removeEventListener('change', dimensionsChange);
    };
  }, [type]);
  return dimensions;
});

exports.default = index;
//# sourceMappingURL=react-native-hooks-dimensions.cjs.js.map
