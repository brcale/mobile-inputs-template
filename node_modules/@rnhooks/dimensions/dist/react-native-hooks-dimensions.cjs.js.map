{"version":3,"file":"react-native-hooks-dimensions.cjs.js","sources":["../src/index.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { useEffect, useState } from 'react';\nimport { Dimensions } from 'react-native';\n\nconst enums = ['window', 'screen'];\n\nconst initialDimensions = {\n  fontScale: null, height: null, width: null, scale: null,\n};\n\nexport default (type) => {\n  if (enums.indexOf(type) === -1) {\n    return initialDimensions;\n  }\n\n  const [dimensions, setDimensions] = useState(Dimensions.get(type));\n\n  useEffect(() => {\n    const currentDimensions = Dimensions.get(type);\n    setDimensions(currentDimensions);\n  }, [type]);\n\n  useEffect(() => {\n    function dimensionsChange(params) {\n      setDimensions(params[type]);\n    }\n\n    Dimensions.addEventListener('change', dimensionsChange);\n    return () => {\n      Dimensions.removeEventListener('change', dimensionsChange);\n    };\n  }, [type]);\n\n  return dimensions;\n};\n"],"names":["enums","initialDimensions","fontScale","height","width","scale","type","indexOf","useState","Dimensions","get","dimensions","setDimensions","useEffect","currentDimensions","dimensionsChange","params","addEventListener","removeEventListener"],"mappings":";;;;;;;;;;AAAA;AACA,AAGA,IAAMA,KAAK,GAAG,CAAC,QAAD,EAAW,QAAX,CAAd;AAEA,IAAMC,iBAAiB,GAAG;EACxBC,SAAS,EAAE,IADa;EACPC,MAAM,EAAE,IADD;EACOC,KAAK,EAAE,IADd;EACoBC,KAAK,EAAE;CADrD;AAIA,aAAe,UAACC,IAAD,EAAU;MACnBN,KAAK,CAACO,OAAN,CAAcD,IAAd,MAAwB,CAAC,CAA7B,EAAgC;WACvBL,iBAAP;;;kBAGkCO,cAAQ,CAACC,sBAAU,CAACC,GAAX,CAAeJ,IAAf,CAAD,CALrB;MAKhBK,UALgB;MAKJC,aALI;;EAOvBC,eAAS,CAAC,YAAM;QACRC,iBAAiB,GAAGL,sBAAU,CAACC,GAAX,CAAeJ,IAAf,CAA1B;IACAM,aAAa,CAACE,iBAAD,CAAb;GAFO,EAGN,CAACR,IAAD,CAHM,CAAT;EAKAO,eAAS,CAAC,YAAM;aACLE,gBAAT,CAA0BC,MAA1B,EAAkC;MAChCJ,aAAa,CAACI,MAAM,CAACV,IAAD,CAAP,CAAb;;;IAGFG,sBAAU,CAACQ,gBAAX,CAA4B,QAA5B,EAAsCF,gBAAtC;WACO,YAAM;MACXN,sBAAU,CAACS,mBAAX,CAA+B,QAA/B,EAAyCH,gBAAzC;KADF;GANO,EASN,CAACT,IAAD,CATM,CAAT;SAWOK,UAAP;CAvBF;;;;"}