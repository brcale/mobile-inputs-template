import { useState, useEffect } from 'react';
import { Dimensions } from 'react-native';

/* eslint-disable no-unused-vars */
var enums = ['window', 'screen'];
var initialDimensions = {
  fontScale: null,
  height: null,
  width: null,
  scale: null
};
var index = (function (type) {
  if (enums.indexOf(type) === -1) {
    return initialDimensions;
  }

  var _useState = useState(Dimensions.get(type)),
      dimensions = _useState[0],
      setDimensions = _useState[1];

  useEffect(function () {
    var currentDimensions = Dimensions.get(type);
    setDimensions(currentDimensions);
  }, [type]);
  useEffect(function () {
    function dimensionsChange(params) {
      setDimensions(params[type]);
    }

    Dimensions.addEventListener('change', dimensionsChange);
    return function () {
      Dimensions.removeEventListener('change', dimensionsChange);
    };
  }, [type]);
  return dimensions;
});

export default index;
//# sourceMappingURL=react-native-hooks-dimensions.esm.js.map
