{"version":3,"file":"react-native-hooks-dimensions.min.js","sources":["../src/index.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { useEffect, useState } from 'react';\nimport { Dimensions } from 'react-native';\n\nconst enums = ['window', 'screen'];\n\nconst initialDimensions = {\n  fontScale: null, height: null, width: null, scale: null,\n};\n\nexport default (type) => {\n  if (enums.indexOf(type) === -1) {\n    return initialDimensions;\n  }\n\n  const [dimensions, setDimensions] = useState(Dimensions.get(type));\n\n  useEffect(() => {\n    const currentDimensions = Dimensions.get(type);\n    setDimensions(currentDimensions);\n  }, [type]);\n\n  useEffect(() => {\n    function dimensionsChange(params) {\n      setDimensions(params[type]);\n    }\n\n    Dimensions.addEventListener('change', dimensionsChange);\n    return () => {\n      Dimensions.removeEventListener('change', dimensionsChange);\n    };\n  }, [type]);\n\n  return dimensions;\n};\n"],"names":["enums","initialDimensions","fontScale","height","width","scale","type","indexOf","useState","Dimensions","get","dimensions","setDimensions","useEffect","currentDimensions","dimensionsChange","params","addEventListener","removeEventListener"],"mappings":"4UAIMA,EAAQ,CAAC,SAAU,UAEnBC,EAAoB,CACxBC,UAAW,KAAMC,OAAQ,KAAMC,MAAO,KAAMC,MAAO,sBAGrCC,OACe,IAAzBN,EAAMO,QAAQD,UACTL,QAG2BO,WAASC,aAAWC,IAAIJ,IAArDK,OAAYC,cAEnBC,YAAU,eACFC,EAAoBL,aAAWC,IAAIJ,GACzCM,EAAcE,IACb,CAACR,IAEJO,YAAU,oBACCE,EAAiBC,GACxBJ,EAAcI,EAAOV,WAGvBG,aAAWQ,iBAAiB,SAAUF,GAC/B,WACLN,aAAWS,oBAAoB,SAAUH,KAE1C,CAACT,IAEGK"}